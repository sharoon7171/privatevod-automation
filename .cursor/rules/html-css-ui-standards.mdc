---
description: Modern HTML5/CSS3 Standards for Chrome Extension UI - Latest Web Standards  
globs:
- "**/*.html"
- "**/*.css"
- "**/popup/**"
- "**/options/**"
- "**/styles/**"
alwaysApply: false
priority: medium
---

# Modern HTML5/CSS3 Standards for Chrome Extension UI

## HTML5 Document Structure
```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Extension Name</title>
  
  <!-- CSP-compliant inline styles prohibited -->
  <link rel="stylesheet" href="styles.css">
  
  <!-- Preload critical resources -->
  <link rel="preload" href="main.mjs" as="script">
  <link rel="preload" href="critical-font.woff2" as="font" type="font/woff2" crossorigin>
</head>
<body>
  <!-- Semantic HTML structure -->
  <header class="extension-header">
    <h1 class="sr-only">Extension Controls</h1>
  </header>
  
  <main class="extension-main">
    <!-- Content here -->
  </main>
  
  <footer class="extension-footer">
    <!-- Footer content -->
  </footer>
  
  <!-- Module script at end -->
  <script type="module" src="main.mjs"></script>
</body>
</html>
```

## Semantic HTML Requirements
- **Always use semantic elements**: `<header>`, `<main>`, `<section>`, `<article>`, `<nav>`, `<aside>`, `<footer>`
- **Proper heading hierarchy**: h1 → h2 → h3, no skipping levels
- **Meaningful alt text** for all images
- **Form labels** properly associated with inputs
- **Button vs link usage**: buttons for actions, links for navigation

## CSS3 Modern Features & Layout
```css
/* ✅ CSS Custom Properties (Variables) */
:root {
  --primary-color: #1a73e8;
  --secondary-color: #5f6368;
  --background-color: #ffffff;
  --text-color: #202124;
  --border-radius: 8px;
  --shadow-subtle: 0 1px 3px rgba(0, 0, 0, 0.1);
  --shadow-elevated: 0 4px 12px rgba(0, 0, 0, 0.15);
  --transition-fast: 0.2s ease;
  --transition-medium: 0.3s ease;
  --font-family: system-ui, -apple-system, 'Segoe UI', Roboto, sans-serif;
}

/* ✅ CSS Grid for Layout */
.extension-layout {
  display: grid;
  grid-template-areas:
    "header header"
    "sidebar main"
    "footer footer";
  grid-template-columns: 200px 1fr;
  grid-template-rows: auto 1fr auto;
  min-height: 100vh;
  gap: 1rem;
}

.extension-header { grid-area: header; }
.extension-sidebar { grid-area: sidebar; }
.extension-main { grid-area: main; }
.extension-footer { grid-area: footer; }

/* ✅ Flexbox for Component Layout */
.button-group {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  justify-content: center;
}

.card {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1.5rem;
  border-radius: var(--border-radius);
  background: var(--background-color);
  box-shadow: var(--shadow-subtle);
}
```

## Container Query Support
```css
/* ✅ Container Queries for Responsive Components */
.popup-container {
  container-type: inline-size;
  width: 100%;
  max-width: 400px;
}

@container (min-width: 300px) {
  .popup-layout {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
  }
}

@container (min-width: 200px) {
  .button-group {
    flex-direction: row;
  }
}

@container (max-width: 199px) {
  .button-group {
    flex-direction: column;
  }
}
```

## Modern CSS Features
```css
/* ✅ Logical Properties for Internationalization */
.content {
  padding-inline: 1rem;
  padding-block: 0.5rem;
  margin-inline-start: auto;
  border-inline-end: 1px solid var(--secondary-color);
}

/* ✅ CSS Nesting */
.button {
  background: var(--primary-color);
  color: white;
  border: none;
  border-radius: var(--border-radius);
  padding: 0.75rem 1.5rem;
  cursor: pointer;
  transition: all var(--transition-fast);

  &:hover {
    background: color-mix(in srgb, var(--primary-color) 90%, black);
    transform: translateY(-1px);
  }

  &:active {
    transform: translateY(0);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }
}

/* ✅ Advanced Selectors */
.input-group:has(input:invalid) {
  border-color: #d93025;
}

.form-field:has(input:focus) .label {
  color: var(--primary-color);
  transform: translateY(-0.5rem) scale(0.9);
}
```

## Chrome Extension Specific CSS
```css
/* ✅ Popup Window Styling */
.popup-window {
  width: 400px;
  min-height: 500px;
  padding: 1rem;
  font-family: var(--font-family);
  font-size: 14px;
  line-height: 1.5;
  background: var(--background-color);
  color: var(--text-color);
}

/* ✅ Content Script Injected Styles */
.extension-overlay {
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 999999;
  background: var(--background-color);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-elevated);
  padding: 1rem;
  max-width: 300px;
  
  /* Ensure it doesn't interfere with page styles */
  all: initial;
  font-family: var(--font-family);
  font-size: 14px;
  color: var(--text-color);
}

/* ✅ Options Page Layout */
.options-page {
  max-width: 800px;
  margin: 2rem auto;
  padding: 2rem;
  
  .section {
    margin-block: 2rem;
    
    .section-title {
      font-size: 1.5rem;
      font-weight: 600;
      margin-block-end: 1rem;
      color: var(--primary-color);
    }
    
    .section-content {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
  }
}
```

## Responsive Design Patterns
```css
/* ✅ Mobile-First Responsive Design */
.responsive-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
}

/* Tablet and up */
@media (min-width: 768px) {
  .responsive-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Desktop and up */
@media (min-width: 1024px) {
  .responsive-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* ✅ Prefer-scheme support */
@media (prefers-color-scheme: dark) {
  :root {
    --background-color: #202124;
    --text-color: #e8eaed;
    --secondary-color: #9aa0a6;
  }
}

/* ✅ Motion preferences */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}
```

## Accessibility Standards
```css
/* ✅ Focus Management */
:focus-visible {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

/* ✅ High Contrast Support */
@media (prefers-contrast: high) {
  .button {
    border: 2px solid currentColor;
  }
  
  .card {
    border: 1px solid var(--text-color);
  }
}

/* ✅ Screen Reader Only Content */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* ✅ Skip Links */
.skip-link {
  position: absolute;
  top: -40px;
  left: 6px;
  background: var(--primary-color);
  color: white;
  padding: 8px;
  text-decoration: none;
  border-radius: 0 0 4px 4px;
  z-index: 100;
  
  &:focus {
    top: 0;
  }
}
```

## Animation & Transitions
```css
/* ✅ Smooth Micro-Interactions */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes slideIn {
  from { transform: translateX(-100%); }
  to { transform: translateX(0); }
}

.fade-in {
  animation: fadeIn var(--transition-medium) ease-out;
}

.slide-in {
  animation: slideIn var(--transition-medium) ease-out;
}

/* ✅ Loading States */
@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

.loading {
  animation: pulse 2s ease-in-out infinite;
}

.skeleton {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
}

@keyframes loading {
  0% { background-position: 200% 0; }
  100% { background-position: -200% 0; }
}
```

## Form Styling Best Practices
```css
/* ✅ Modern Form Controls */
.form-field {
  position: relative;
  margin-block: 1rem;
}

.input {
  width: 100%;
  padding: 0.75rem;
  border: 2px solid transparent;
  background: #f8f9fa;
  border-radius: var(--border-radius);
  font-size: 1rem;
  transition: all var(--transition-fast);
  
  &:focus {
    outline: none;
    border-color: var(--primary-color);
    background: white;
  }
  
  &:invalid {
    border-color: #d93025;
  }
}

.label {
  position: absolute;
  top: 0.75rem;
  left: 0.75rem;
  color: var(--secondary-color);
  transition: all var(--transition-fast);
  pointer-events: none;
  
  .input:focus + &,
  .input:not(:placeholder-shown) + & {
    transform: translateY(-0.5rem) scale(0.9);
    color: var(--primary-color);
  }
}
```

## Performance Optimizations
- **Critical CSS inline** - only for above-the-fold content
- **Font loading strategies** - use `font-display: swap`
- **CSS containment** - use `contain: layout style paint`
- **Will-change sparingly** - only for active animations
- **Efficient selectors** - avoid deep nesting and universal selectors