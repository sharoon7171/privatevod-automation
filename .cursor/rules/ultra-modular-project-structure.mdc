---
description: Ultra-Modular Chrome Extension Project Structure - Every Component Separated
globs:
- "**/templates/**"
- "**/styles/**"
- "**/ui/**"
- "**/controllers/**"
- "**/managers/**"
- "**/services/**"
- "**/handlers/**"
- "**/validators/**"
- "**/formatters/**"
- "**/models/**"
- "**/interfaces/**"
- "**/functions/**"
- "**/hooks/**"
- "**/pages/**"
- "**/content-scripts/**"
- "**/project-structure"
- "**/architecture"
alwaysApply: true
priority: critical
---

# Ultra-Modular Chrome Extension Project Structure

## Core Principle: ULTRA-MODULAR SEPARATION
- **Every function separate file** - no mixing any concerns
- **UI separate from Logic** - presentation vs business logic
- **HTML separate from CSS separate from JS** - complete separation
- **Controllers, Managers, Services, Handlers all separate** - professional architecture
- **Templates, Validators, Formatters, Models all separate** - enterprise-level modularity
- **No file has multiple responsibilities** - absolute single responsibility

## Complete ULTRA-MODULAR Project Structure
```
chrome-extension/
├── manifest.json                           # Extension configuration
├── service-worker.mjs                      # Main background worker entry point
│
├── templates/                              # HTML Templates (Pure Structure)
│   ├── pages/
│   │   ├── popup.html                      # Popup page structure only
│   │   ├── options.html                    # Options page structure only
│   │   ├── background.html                 # Background page structure (if needed)
│   │   └── content-overlay.html            # Content script overlay structure
│   │
│   ├── components/
│   │   ├── basic/
│   │   │   ├── button.html                 # Button HTML template
│   │   │   ├── input.html                  # Input HTML template
│   │   │   ├── label.html                  # Label HTML template
│   │   │   ├── icon.html                   # Icon HTML template
│   │   │   ├── badge.html                  # Badge HTML template
│   │   │   ├── spinner.html                # Spinner HTML template
│   │   │   ├── tooltip.html                # Tooltip HTML template
│   │   │   ├── toggle.html                 # Toggle HTML template
│   │   │   ├── checkbox.html               # Checkbox HTML template
│   │   │   ├── radio.html                  # Radio HTML template
│   │   │   ├── select.html                 # Select HTML template
│   │   │   └── divider.html                # Divider HTML template
│   │   │
│   │   ├── composite/
│   │   │   ├── search-box.html             # Search box HTML template
│   │   │   ├── form-field.html             # Form field HTML template
│   │   │   ├── button-group.html           # Button group HTML template
│   │   │   ├── dropdown-menu.html          # Dropdown menu HTML template
│   │   │   ├── tab-item.html               # Tab item HTML template
│   │   │   ├── list-item.html              # List item HTML template
│   │   │   ├── card-section.html           # Card section HTML template
│   │   │   └── toolbar.html                # Toolbar HTML template
│   │   │
│   │   └── complex/
│   │       ├── header.html                 # Header HTML template
│   │       ├── footer.html                 # Footer HTML template
│   │       ├── navigation.html             # Navigation HTML template
│   │       ├── sidebar.html                # Sidebar HTML template
│   │       ├── form.html                   # Form HTML template
│   │       ├── table.html                  # Table HTML template
│   │       ├── list.html                   # List HTML template
│   │       ├── grid.html                   # Grid HTML template
│   │       ├── card.html                   # Card HTML template
│   │       ├── modal.html                  # Modal HTML template
│   │       ├── tabs.html                   # Tabs HTML template
│   │       └── accordion.html              # Accordion HTML template
│   │
│   └── layouts/
│       ├── page-layout.html                # Basic page layout
│       ├── popup-layout.html               # Popup layout template
│       ├── options-layout.html             # Options layout template
│       └── error-layout.html               # Error layout template
│
├── styles/                                 # CSS Styles (Pure Presentation)
│   ├── base/
│   │   ├── reset.css                       # CSS reset only
│   │   ├── variables.css                   # CSS custom properties only
│   │   ├── typography.css                  # Typography styles only
│   │   ├── colors.css                      # Color definitions only
│   │   ├── spacing.css                     # Spacing utilities only
│   │   ├── grid.css                        # Grid system only
│   │   └── layout.css                      # Layout utilities only
│   │
│   ├── components/
│   │   ├── basic/
│   │   │   ├── button.css                  # Button styles only
│   │   │   ├── input.css                   # Input styles only
│   │   │   ├── label.css                   # Label styles only
│   │   │   ├── icon.css                    # Icon styles only
│   │   │   ├── badge.css                   # Badge styles only
│   │   │   ├── spinner.css                 # Spinner styles only
│   │   │   ├── tooltip.css                 # Tooltip styles only
│   │   │   ├── toggle.css                  # Toggle styles only
│   │   │   ├── checkbox.css                # Checkbox styles only
│   │   │   ├── radio.css                   # Radio styles only
│   │   │   ├── select.css                  # Select styles only
│   │   │   └── divider.css                 # Divider styles only
│   │   │
│   │   ├── composite/
│   │   │   ├── search-box.css              # Search box styles only
│   │   │   ├── form-field.css              # Form field styles only
│   │   │   ├── button-group.css            # Button group styles only
│   │   │   ├── dropdown-menu.css           # Dropdown menu styles only
│   │   │   ├── tab-item.css                # Tab item styles only
│   │   │   ├── list-item.css               # List item styles only
│   │   │   ├── card-section.css            # Card section styles only
│   │   │   └── toolbar.css                 # Toolbar styles only
│   │   │
│   │   └── complex/
│   │       ├── header.css                  # Header styles only
│   │       ├── footer.css                  # Footer styles only
│   │       ├── navigation.css              # Navigation styles only
│   │       ├── sidebar.css                 # Sidebar styles only
│   │       ├── form.css                    # Form styles only
│   │       ├── table.css                   # Table styles only
│   │       ├── list.css                    # List styles only
│   │       ├── grid.css                    # Grid styles only
│   │       ├── card.css                    # Card styles only
│   │       ├── modal.css                   # Modal styles only
│   │       ├── tabs.css                    # Tabs styles only
│   │       └── accordion.css               # Accordion styles only
│   │
│   ├── pages/
│   │   ├── popup-page.css                  # Popup page styles only
│   │   ├── options-page.css                # Options page styles only
│   │   └── content-overlay.css             # Content overlay styles only
│   │
│   ├── themes/
│   │   ├── light-theme.css                 # Light theme only
│   │   ├── dark-theme.css                  # Dark theme only
│   │   └── high-contrast.css               # High contrast theme only
│   │
│   └── utilities/
│       ├── animations.css                  # Animation utilities only
│       ├── transitions.css                 # Transition utilities only
│       ├── shadows.css                     # Shadow utilities only
│       └── borders.css                     # Border utilities only
│
├── ui/                                     # UI Components (Pure Presentation Logic)
│   ├── basic/
│   │   ├── button.mjs                      # Button UI component only
│   │   ├── input.mjs                       # Input UI component only
│   │   ├── label.mjs                       # Label UI component only
│   │   ├── icon.mjs                        # Icon UI component only
│   │   ├── badge.mjs                       # Badge UI component only
│   │   ├── spinner.mjs                     # Spinner UI component only
│   │   ├── tooltip.mjs                     # Tooltip UI component only
│   │   ├── toggle.mjs                      # Toggle UI component only
│   │   ├── checkbox.mjs                    # Checkbox UI component only
│   │   ├── radio.mjs                       # Radio UI component only
│   │   ├── select.mjs                      # Select UI component only
│   │   └── divider.mjs                     # Divider UI component only
│   │
│   ├── composite/
│   │   ├── search-box.mjs                  # Search box UI component only
│   │   ├── form-field.mjs                  # Form field UI component only
│   │   ├── button-group.mjs                # Button group UI component only
│   │   ├── dropdown-menu.mjs               # Dropdown menu UI component only
│   │   ├── tab-item.mjs                    # Tab item UI component only
│   │   ├── list-item.mjs                   # List item UI component only
│   │   ├── card-section.mjs                # Card section UI component only
│   │   └── toolbar.mjs                     # Toolbar UI component only
│   │
│   ├── complex/
│   │   ├── header.mjs                      # Header UI component only
│   │   ├── footer.mjs                      # Footer UI component only
│   │   ├── navigation.mjs                  # Navigation UI component only
│   │   ├── sidebar.mjs                     # Sidebar UI component only
│   │   ├── form.mjs                        # Form UI component only
│   │   ├── table.mjs                       # Table UI component only
│   │   ├── list.mjs                        # List UI component only
│   │   ├── grid.mjs                        # Grid UI component only
│   │   ├── card.mjs                        # Card UI component only
│   │   ├── modal.mjs                       # Modal UI component only
│   │   ├── tabs.mjs                        # Tabs UI component only
│   │   └── accordion.mjs                   # Accordion UI component only
│   │
│   └── layouts/
│       ├── page-layout.mjs                 # Page layout UI only
│       ├── popup-layout.mjs                # Popup layout UI only
│       ├── options-layout.mjs              # Options layout UI only
│       └── error-layout.mjs                # Error layout UI only
│
├── controllers/                            # Controllers (Event Handling Logic Only)
│   ├── popup-controller.mjs              # Popup event handling only
│   ├── options-controller.mjs            # Options event handling only
│   ├── background-controller.mjs         # Background event handling only
│   ├── content-controller.mjs            # Content script event handling only
│   ├── form-controller.mjs               # Form event handling only
│   ├── navigation-controller.mjs         # Navigation event handling only
│   ├── modal-controller.mjs              # Modal event handling only
│   ├── tab-controller.mjs                # Tab event handling only
│   ├── search-controller.mjs             # Search event handling only
│   └── settings-controller.mjs           # Settings event handling only
│
├── managers/                              # Managers (Resource Management Only)
│   ├── state-manager.mjs                 # State management only
│   ├── storage-manager.mjs               # Storage management only
│   ├── cache-manager.mjs                 # Cache management only
│   ├── session-manager.mjs               # Session management only
│   ├── theme-manager.mjs                 # Theme management only
│   ├── permission-manager.mjs            # Permission management only
│   ├── notification-manager.mjs          # Notification management only
│   ├── tab-manager.mjs                   # Tab management only
│   ├── window-manager.mjs                # Window management only
│   ├── extension-manager.mjs             # Extension lifecycle management only
│   └── error-manager.mjs                 # Error management only
│
├── services/                             # Services (Business Logic Only)
│   ├── api/
│   │   ├── api-service.mjs               # Base API service only
│   │   ├── auth-service.mjs              # Authentication service only
│   │   ├── user-service.mjs              # User service only
│   │   ├── data-service.mjs              # Data service only
│   │   ├── search-service.mjs            # Search service only
│   │   ├── analytics-service.mjs         # Analytics service only
│   │   └── sync-service.mjs              # Synchronization service only
│   │
│   ├── storage/
│   │   ├── local-storage-service.mjs     # Local storage service only
│   │   ├── sync-storage-service.mjs      # Sync storage service only
│   │   ├── session-storage-service.mjs   # Session storage service only
│   │   ├── cache-service.mjs             # Cache service only
│   │   └── backup-service.mjs            # Backup service only
│   │
│   ├── messaging/
│   │   ├── message-service.mjs           # Message service only
│   │   ├── background-message-service.mjs # Background messaging service only
│   │   ├── content-message-service.mjs   # Content messaging service only
│   │   └── popup-message-service.mjs     # Popup messaging service only
│   │
│   ├── security/
│   │   ├── validation-service.mjs        # Validation service only
│   │   ├── sanitization-service.mjs     # Sanitization service only
│   │   ├── encryption-service.mjs       # Encryption service only
│   │   └── auth-service.mjs              # Authorization service only
│   │
│   └── utility/
│       ├── parsing-service.mjs           # Parsing service only
│       ├── formatting-service.mjs        # Formatting service only
│       ├── conversion-service.mjs        # Conversion service only
│       └── calculation-service.mjs       # Calculation service only
│
├── handlers/                             # Handlers (Specific Event Processing Only)
│   ├── click-handler.mjs                 # Click event handling only
│   ├── keyboard-handler.mjs              # Keyboard event handling only
│   ├── mouse-handler.mjs                 # Mouse event handling only
│   ├── form-submit-handler.mjs           # Form submission handling only
│   ├── input-change-handler.mjs          # Input change handling only
│   ├── window-resize-handler.mjs         # Window resize handling only
│   ├── storage-change-handler.mjs        # Storage change handling only
│   ├── message-handler.mjs               # Message handling only
│   ├── error-handler.mjs                 # Error handling only
│   └── navigation-handler.mjs            # Navigation handling only
│
├── validators/                           # Validators (Data Validation Only)
│   ├── form-validator.mjs                # Form validation only
│   ├── input-validator.mjs               # Input validation only
│   ├── email-validator.mjs               # Email validation only
│   ├── url-validator.mjs                 # URL validation only
│   ├── password-validator.mjs            # Password validation only
│   ├── number-validator.mjs              # Number validation only
│   ├── date-validator.mjs                # Date validation only
│   ├── file-validator.mjs                # File validation only
│   ├── json-validator.mjs                # JSON validation only
│   └── schema-validator.mjs              # Schema validation only
│
├── formatters/                           # Formatters (Data Formatting Only)
│   ├── date-formatter.mjs                # Date formatting only
│   ├── number-formatter.mjs              # Number formatting only
│   ├── currency-formatter.mjs            # Currency formatting only
│   ├── text-formatter.mjs                # Text formatting only
│   ├── url-formatter.mjs                 # URL formatting only
│   ├── json-formatter.mjs                # JSON formatting only
│   ├── html-formatter.mjs                # HTML formatting only
│   └── css-formatter.mjs                 # CSS formatting only
│
├── models/                               # Models (Data Structures Only)
│   ├── user-model.mjs                    # User data model only
│   ├── settings-model.mjs                # Settings data model only
│   ├── session-model.mjs                 # Session data model only
│   ├── cache-model.mjs                   # Cache data model only
│   ├── message-model.mjs                 # Message data model only
│   ├── error-model.mjs                   # Error data model only
│   ├── notification-model.mjs            # Notification data model only
│   ├── tab-model.mjs                     # Tab data model only
│   └── extension-model.mjs               # Extension data model only
│
├── interfaces/                           # Interfaces (Type Definitions Only)
│   ├── api-interface.mjs                 # API interface definitions only
│   ├── storage-interface.mjs             # Storage interface definitions only
│   ├── message-interface.mjs             # Message interface definitions only
│   ├── component-interface.mjs           # Component interface definitions only
│   ├── service-interface.mjs             # Service interface definitions only
│   ├── handler-interface.mjs             # Handler interface definitions only
│   ├── validator-interface.mjs           # Validator interface definitions only
│   └── formatter-interface.mjs           # Formatter interface definitions only
│
├── functions/                            # Utility Functions (Pure Functions Only)
│   ├── dom/
│   │   ├── element-selector.mjs          # DOM element selection functions only
│   │   ├── element-creator.mjs           # DOM element creation functions only
│   │   ├── element-modifier.mjs          # DOM modification functions only
│   │   ├── element-traverser.mjs         # DOM navigation functions only
│   │   ├── style-applier.mjs             # Style application functions only
│   │   └── class-manipulator.mjs         # CSS class functions only
│   │
│   ├── data/
│   │   ├── array-functions.mjs           # Array operation functions only
│   │   ├── object-functions.mjs          # Object operation functions only
│   │   ├── string-functions.mjs          # String operation functions only
│   │   ├── number-functions.mjs          # Number operation functions only
│   │   ├── date-functions.mjs            # Date operation functions only
│   │   ├── url-functions.mjs             # URL operation functions only
│   │   └── json-functions.mjs            # JSON operation functions only
│   │
│   ├── async/
│   │   ├── debounce-function.mjs         # Debounce function only
│   │   ├── throttle-function.mjs         # Throttle function only
│   │   ├── delay-function.mjs            # Delay function only
│   │   ├── timeout-function.mjs          # Timeout function only
│   │   ├── retry-function.mjs            # Retry function only
│   │   └── promise-functions.mjs         # Promise utility functions only
│   │
│   ├── validation/
│   │   ├── type-checking.mjs             # Type checking functions only
│   │   ├── range-checking.mjs            # Range validation functions only
│   │   ├── format-checking.mjs           # Format validation functions only
│   │   ├── pattern-matching.mjs          # Pattern matching functions only
│   │   └── existence-checking.mjs        # Existence checking functions only
│   │
│   ├── conversion/
│   │   ├── type-converter.mjs            # Type conversion functions only
│   │   ├── format-converter.mjs          # Format conversion functions only
│   │   ├── encoding-converter.mjs        # Encoding conversion functions only
│   │   └── case-converter.mjs            # Case conversion functions only
│   │
│   ├── calculation/
│   │   ├── math-functions.mjs            # Math calculation functions only
│   │   ├── statistical-functions.mjs    # Statistical functions only
│   │   ├── comparison-functions.mjs      # Comparison functions only
│   │   └── sorting-functions.mjs         # Sorting functions only
│   │
│   └── utility/
│       ├── id-generator.mjs              # ID generation functions only
│       ├── hash-functions.mjs            # Hash generation functions only
│       ├── random-functions.mjs          # Random generation functions only
│       ├── clone-functions.mjs           # Deep/shallow clone functions only
│       └── merge-functions.mjs           # Object merge functions only
│
├── content-scripts/                      # Content Script Entry Points Only
│   ├── main-content-script.mjs           # Main content script entry only
│   ├── background-content-script.mjs     # Background content script entry only
│   └── popup-content-script.mjs          # Popup content script entry only
│
├── pages/                                # Page Entry Points Only  
│   ├── popup-page.mjs                    # Popup page entry point only
│   ├── options-page.mjs                  # Options page entry point only
│   └── background-page.mjs               # Background page entry point only
│
├── hooks/                                # Reusable Logic Hooks Only
│   ├── use-storage.mjs                   # Storage hook only
│   ├── use-messaging.mjs                 # Messaging hook only
│   ├── use-permissions.mjs               # Permissions hook only
│   ├── use-tabs.mjs                      # Tabs hook only
│   ├── use-analytics.mjs                 # Analytics hook only
│   ├── use-theme.mjs                     # Theme hook only
│   ├── use-settings.mjs                  # Settings hook only
│   ├── use-validation.mjs                # Validation hook only
│   ├── use-formatting.mjs                # Formatting hook only
│   └── use-api.mjs                       # API hook only
│
├── assets/                               # Static Assets Only
│   ├── icons/
│   │   ├── icon-16.png                   # 16px icon
│   │   ├── icon-48.png                   # 48px icon
│   │   ├── icon-128.png                  # 128px icon
│   │   └── icon.svg                      # Vector icon
│   │
│   ├── images/
│   │   ├── logo.svg                      # Extension logo
│   │   ├── placeholder.svg               # Placeholder image
│   │   └── background.svg                # Background image
│   │
│   ├── fonts/
│   │   ├── primary-font.woff2            # Primary font
│   │   └── icon-font.woff2               # Icon font
│   │
│   └── data/
│       ├── countries.json                # Country list
│       ├── languages.json                # Language list
│       └── timezones.json                # Timezone list
│
├── tests/                                # Test Files Only
│   ├── unit/
│   │   ├── ui/                           # UI component tests
│   │   ├── controllers/                  # Controller tests
│   │   ├── managers/                     # Manager tests
│   │   ├── services/                     # Service tests
│   │   ├── handlers/                     # Handler tests
│   │   ├── validators/                   # Validator tests
│   │   ├── formatters/                   # Formatter tests
│   │   ├── functions/                    # Function tests
│   │   └── hooks/                        # Hook tests
│   │
│   ├── integration/
│   │   ├── messaging.test.mjs            # Message passing tests
│   │   ├── storage.test.mjs              # Storage tests
│   │   ├── api.test.mjs                  # API tests
│   │   └── ui-integration.test.mjs       # UI integration tests
│   │
│   ├── e2e/
│   │   ├── popup.test.mjs                # Popup E2E tests
│   │   ├── options.test.mjs              # Options E2E tests
│   │   ├── content-script.test.mjs       # Content script E2E tests
│   │   └── full-workflow.test.mjs        # Full workflow tests
│   │
│   └── mocks/
│       ├── chrome-api-mock.mjs           # Chrome API mocks
│       ├── dom-mock.mjs                  # DOM mocks
│       ├── api-mock.mjs                  # API mocks
│       └── data-mock.mjs                 # Data mocks
│
├── config/                               # Configuration Files Only
│   ├── webpack.config.mjs                # Webpack configuration
│   ├── jest.config.mjs                   # Jest configuration
│   ├── eslint.config.mjs                 # ESLint configuration
│   ├── prettier.config.mjs               # Prettier configuration
│   ├── build.config.mjs                  # Build configuration
│   └── deployment.config.mjs             # Deployment configuration
│
└── scripts/                              # Build Scripts Only
    ├── build.mjs                         # Build script
    ├── dev.mjs                           # Development script
    ├── test.mjs                          # Test script
    ├── package.mjs                       # Package script
    ├── deploy.mjs                        # Deployment script
    ├── clean.mjs                         # Cleanup script
    └── lint.mjs                          # Linting script
```

## File Naming Conventions

### Directory Names
- **kebab-case** - all lowercase with hyphens
- **singular nouns** - `component` not `components` (except where plural makes sense)
- **descriptive** - clear purpose indication

### File Names
- **kebab-case** - all lowercase with hyphens
- **descriptive** - purpose clearly indicated
- **consistent extensions** - `.mjs` for modules, `.css` for styles
- **no abbreviations** - `button.mjs` not `btn.mjs`

### Ultra-Modular Organization Rules
1. **Complete Separation Principle**
   - **Templates**: Pure HTML structure only (no logic, no styles)
   - **Styles**: Pure CSS presentation only (no logic, no HTML)
   - **UI**: Pure presentation logic only (no business logic, no data processing)
   - **Controllers**: Pure event handling only (no UI, no business logic)
   - **Managers**: Pure resource management only (no business logic)
   - **Services**: Pure business logic only (no UI, no event handling)
   - **Handlers**: Pure specific event processing only
   - **Validators**: Pure data validation only (no formatting, no business logic)
   - **Formatters**: Pure data formatting only (no validation, no business logic)
   - **Models**: Pure data structures only (no logic)
   - **Interfaces**: Pure type definitions only
   - **Functions**: Pure utility functions only (no state, no side effects)

2. **Professional Architecture Layers**
   - **Presentation Layer**: templates/ + styles/ + ui/
   - **Control Layer**: controllers/ + handlers/
   - **Business Layer**: services/ + managers/
   - **Data Layer**: models/ + interfaces/ + validators/ + formatters/
   - **Utility Layer**: functions/ + hooks/
   - **Infrastructure Layer**: pages/ + content-scripts/

3. **Absolute Single Responsibility**
   - Each file handles EXACTLY ONE function/class/component
   - No mixing ANY concerns within files
   - No shared responsibilities between files
   - Clear, explicit import/export patterns

4. **Dependency Flow Rules**
   - **Templates** depend on nothing
   - **Styles** depend on nothing  
   - **UI** depends on templates + styles only
   - **Controllers** depend on ui + handlers only
   - **Services** depend on models + validators + formatters only
   - **Managers** depend on services only
   - **Pages** depend on controllers + managers + ui only

## Ultra-Modular Import/Export Pattern
```javascript
// ✅ UI Component - Pure Presentation
// ui/basic/button.mjs
export default class ButtonUI {
  // Only UI rendering logic
}

// ✅ Controller - Pure Event Handling  
// controllers/form-controller.mjs
export default class FormController {
  // Only event handling logic
}

// ✅ Service - Pure Business Logic
// services/api/user-service.mjs
export default class UserService {
  // Only business logic
}

// ✅ Functions - Pure Utility Functions
// functions/validation/type-checking.mjs
export const isString = (value) => { /* */ };
export const isNumber = (value) => { /* */ };
export const isArray = (value) => { /* */ };

// ✅ Ultra-Modular Imports - Layer Separation
// pages/popup-page.mjs
import ButtonUI from '../ui/basic/button.mjs';
import FormController from '../controllers/form-controller.mjs';
import UserService from '../services/api/user-service.mjs';
import { isString, isNumber } from '../functions/validation/type-checking.mjs';
import UserModel from '../models/user-model.mjs';
```

## Benefits of ULTRA-MODULAR Structure

### Professional Development Benefits
- **Enterprise-Level Architecture** - Professional software architecture patterns
- **Clean Code Principles** - Single Responsibility, Open/Closed, Dependency Inversion
- **Maintainability** - Find and modify ANY functionality in seconds
- **Scalability** - Add infinite features without conflicts or complexity
- **Team Collaboration** - Multiple developers work on different layers simultaneously

### Technical Benefits  
- **Complete Separation of Concerns** - HTML, CSS, JS, Logic, Data all separate
- **Zero Coupling** - Change any layer without affecting others
- **Maximum Testability** - Test every single function/component in isolation
- **Performance Optimization** - Load only exact modules needed (ultimate lazy loading)
- **Memory Efficiency** - No unused code loaded, precise resource usage

### Developer Experience Benefits
- **Instant Location** - Find any functionality within 5 seconds using directory structure
- **Predictable Structure** - Every developer knows exactly where everything is
- **Easy Debugging** - Isolate issues to exact file, no mystery bugs
- **Rapid Development** - Build features by composing existing modules
- **Future-Proof** - Add new layers/modules without touching existing code

### Chrome Extension Specific Benefits
- **Manifest V3 Optimized** - Perfect alignment with Chrome's module system
- **Service Worker Efficient** - Minimal memory footprint for background processing
- **Content Script Precision** - Load only required modules per page
- **Storage Optimization** - Separate data models for efficient chrome.storage usage
- **Permission Minimization** - Request only exact permissions needed per module